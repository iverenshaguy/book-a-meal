// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Auth should render Signin Form component correctly 1`] = `
<Fragment>
  <Header
    dateType={null}
    logout={null}
    showTime={true}
    type="unauth"
    updateCurrentDate={null}
    user={null}
  />
  <div
    className="main-wrapper auth-wrapper"
  >
    <div
      className="auth"
    >
      <div
        className="title"
      >
        <h2>
          Welcome Back
        </h2>
        <hr
          className="w-75"
        />
      </div>
      <Connect(Form)
        isAuthenticated={false}
        location={
          Object {
            "pathname": "/signin",
            "state": Object {
              "from": Object {
                "pathname": "/",
              },
            },
          }
        }
        meta={
          Object {
            "btnText": "SIGN IN",
            "extra": <React.Fragment>
              <p
                className="form-extra-info forgot-password"
              >
                <Link
                  replace={false}
                  to="/forgot-password"
                >
                  Forgot Password?
                </Link>
              </p>
              <p
                className="form-extra-info text-center"
              >
                <React.Fragment>
                  Don't have an account?
                   
                  <Link
                    replace={false}
                    to="/signup?role=customer"
                  >
                    Signup Here
                  </Link>
                </React.Fragment>
              </p>
              <p
                className="text-center"
              >
                Or
              </p>
              <p
                className="form-extra-info text-center"
              >
                <Link
                  replace={false}
                  to="/signup?role=caterer"
                >
                  Signup as a Caterer
                </Link>
              </p>
            </React.Fragment>,
          }
        }
        submitError={null}
        submitting={false}
        type="signin"
      />
    </div>
  </div>
  <Footer />
</Fragment>
`;

exports[`Auth should render caterer's signup form correctly when role query is caterer 1`] = `
<Fragment>
  <Header
    dateType={null}
    logout={null}
    showTime={true}
    type="unauth"
    updateCurrentDate={null}
    user={null}
  />
  <div
    className="main-wrapper auth-wrapper"
  >
    <div
      className="auth"
    >
      <div
        className="title"
      >
        <h2>
          Start Serving Customers
        </h2>
        <hr
          className="w-75"
        />
      </div>
      <Connect(Form)
        isAuthenticated={false}
        location={
          Object {
            "pathname": "/signup",
            "search": "?role=caterer",
            "state": Object {
              "from": Object {
                "pathname": "/",
              },
            },
          }
        }
        meta={
          Object {
            "btnText": "SIGN UP",
            "extra": <React.Fragment>
              <p
                className="form-extra-info text-center"
              >
                <React.Fragment>
                  Already have an account?
                   
                  <Link
                    replace={false}
                    to="/signin"
                  >
                    Sign In Here
                  </Link>
                </React.Fragment>
              </p>
              <p
                className="text-center"
              >
                Or
              </p>
              <p
                className="form-extra-info text-center"
              >
                <Link
                  replace={false}
                  to="/signup?role=customer"
                >
                  Signup as a Customer
                </Link>
              </p>
            </React.Fragment>,
          }
        }
        submitError={null}
        submitting={false}
        type="catererSignup"
      />
    </div>
  </div>
  <Footer />
</Fragment>
`;

exports[`Auth should render customer's signup form component correctly 1`] = `
<Fragment>
  <Header
    dateType={null}
    logout={null}
    showTime={true}
    type="unauth"
    updateCurrentDate={null}
    user={null}
  />
  <div
    className="main-wrapper auth-wrapper"
  >
    <div
      className="auth"
    >
      <div
        className="title"
      >
        <h2>
          Start Filling Your Belly
        </h2>
        <hr
          className="w-75"
        />
      </div>
      <Connect(Form)
        isAuthenticated={false}
        location={
          Object {
            "pathname": "/signup",
            "search": "?role=customer",
            "state": Object {
              "from": Object {
                "pathname": "/",
              },
            },
          }
        }
        meta={
          Object {
            "btnText": "SIGN UP",
            "extra": <React.Fragment>
              <p
                className="form-extra-info text-center"
              >
                <React.Fragment>
                  Already have an account?
                   
                  <Link
                    replace={false}
                    to="/signin"
                  >
                    Sign In Here
                  </Link>
                </React.Fragment>
              </p>
              <p
                className="text-center"
              >
                Or
              </p>
              <p
                className="form-extra-info text-center"
              >
                <Link
                  replace={false}
                  to="/signup?role=caterer"
                >
                  Signup as a Caterer
                </Link>
              </p>
            </React.Fragment>,
          }
        }
        submitError={null}
        submitting={false}
        type="customerSignup"
      />
    </div>
  </div>
  <Footer />
</Fragment>
`;

exports[`Auth should render signin component that is connected to the redux store correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Auth)
    isAuthenticated={false}
    location={
      Object {
        "pathname": "/signin",
        "state": Object {
          "from": Object {
            "pathname": "/",
          },
        },
      }
    }
    submitError={null}
    submitting={false}
    type="signin"
  >
    <Auth
      dispatch={[Function]}
      isAuthenticated={false}
      location={
        Object {
          "pathname": "/signin",
          "state": Object {
            "from": Object {
              "pathname": "/",
            },
          },
        }
      }
      submitError={null}
      submitting={false}
      type="signin"
    >
      <Header
        dateType={null}
        logout={null}
        showTime={true}
        type="unauth"
        updateCurrentDate={null}
        user={null}
      >
        <div
          className="header unauth"
        >
          <div
            className="navbar unauth-navbar"
          >
            <div
              className="page-title"
            >
              <h3>
                <Link
                  replace={false}
                  to="/"
                >
                  <a
                    href="/"
                    onClick={[Function]}
                  >
                    BOOK-A-MEAL
                  </a>
                </Link>
              </h3>
            </div>
          </div>
        </div>
      </Header>
      <div
        className="main-wrapper auth-wrapper"
      >
        <div
          className="auth"
        >
          <div
            className="title"
          >
            <h2>
              Welcome Back
            </h2>
            <hr
              className="w-75"
            />
          </div>
          <Connect(Form)
            dispatch={[Function]}
            isAuthenticated={false}
            location={
              Object {
                "pathname": "/signin",
                "state": Object {
                  "from": Object {
                    "pathname": "/",
                  },
                },
              }
            }
            meta={
              Object {
                "btnText": "SIGN IN",
                "extra": <React.Fragment>
                  <p
                    className="form-extra-info forgot-password"
                  >
                    <Link
                      replace={false}
                      to="/forgot-password"
                    >
                      Forgot Password?
                    </Link>
                  </p>
                  <p
                    className="form-extra-info text-center"
                  >
                    <React.Fragment>
                      Don't have an account?
                       
                      <Link
                        replace={false}
                        to="/signup?role=customer"
                      >
                        Signup Here
                      </Link>
                    </React.Fragment>
                  </p>
                  <p
                    className="text-center"
                  >
                    Or
                  </p>
                  <p
                    className="form-extra-info text-center"
                  >
                    <Link
                      replace={false}
                      to="/signup?role=caterer"
                    >
                      Signup as a Caterer
                    </Link>
                  </p>
                </React.Fragment>,
              }
            }
            submitError={null}
            submitting={false}
            type="signin"
          >
            <Form
              dispatch={[Function]}
              email={null}
              isAuthenticated={false}
              location={
                Object {
                  "pathname": "/signin",
                  "state": Object {
                    "from": Object {
                      "pathname": "/",
                    },
                  },
                }
              }
              meal={null}
              meta={
                Object {
                  "btnText": "SIGN IN",
                  "extra": <React.Fragment>
                    <p
                      className="form-extra-info forgot-password"
                    >
                      <Link
                        replace={false}
                        to="/forgot-password"
                      >
                        Forgot Password?
                      </Link>
                    </p>
                    <p
                      className="form-extra-info text-center"
                    >
                      <React.Fragment>
                        Don't have an account?
                         
                        <Link
                          replace={false}
                          to="/signup?role=customer"
                        >
                          Signup Here
                        </Link>
                      </React.Fragment>
                    </p>
                    <p
                      className="text-center"
                    >
                      Or
                    </p>
                    <p
                      className="form-extra-info text-center"
                    >
                      <Link
                        replace={false}
                        to="/signup?role=caterer"
                      >
                        Signup as a Caterer
                      </Link>
                    </p>
                  </React.Fragment>,
                }
              }
              submitError={null}
              submitting={false}
              token={null}
              type="signin"
              uploading={null}
            >
              <div>
                <form
                  onSubmit={[Function]}
                >
                  <SigninForm
                    handlers={
                      Object {
                        "handleBlur": [Function],
                        "handleChange": [Function],
                        "handleFocus": [Function],
                        "handleSubmit": [Function],
                      }
                    }
                    state={
                      Object {
                        "error": Object {
                          "email": null,
                          "password": null,
                        },
                        "formValid": false,
                        "pristine": true,
                        "touched": Object {
                          "email": false,
                          "password": false,
                        },
                        "type": "signin",
                        "typingTimeout": 0,
                        "values": Object {
                          "email": "",
                          "password": "",
                        },
                      }
                    }
                    type="signin"
                  >
                    <RenderInput
                      handleBlur={[Function]}
                      handleChange={[Function]}
                      handleFocus={[Function]}
                      id="email"
                      label="Email Address"
                      meta={
                        Object {
                          "asyncValidating": undefined,
                          "error": null,
                          "touched": false,
                        }
                      }
                      name="email"
                      placeholder=""
                      required={true}
                      type="email"
                      value=""
                    >
                      <div
                        className="form-input"
                      >
                        <label
                          htmlFor="email"
                          onClick={[Function]}
                        >
                          Email Address
                          <span
                            className="danger"
                          >
                            *
                          </span>
                        </label>
                        <input
                          className=""
                          id="email"
                          name="email"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder=""
                          type="email"
                          value=""
                        />
                         
                      </div>
                    </RenderInput>
                    <RenderInput
                      handleBlur={[Function]}
                      handleChange={[Function]}
                      handleFocus={[Function]}
                      id="password"
                      label="Password"
                      meta={
                        Object {
                          "error": null,
                          "touched": false,
                        }
                      }
                      name="password"
                      placeholder=""
                      required={true}
                      type="password"
                      value=""
                    >
                      <div
                        className="form-input"
                      >
                        <label
                          htmlFor="password"
                          onClick={[Function]}
                        >
                          Password
                          <span
                            className="danger"
                          >
                            *
                          </span>
                        </label>
                        <input
                          className=""
                          id="password"
                          name="password"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder=""
                          type="password"
                          value=""
                        />
                         
                      </div>
                    </RenderInput>
                  </SigninForm>
                  <button
                    className="btn btn-pri btn-block"
                    disabled={true}
                    type="submit"
                  >
                    SIGN IN
                  </button>
                </form>
                <p
                  className="form-extra-info forgot-password"
                >
                  <Link
                    replace={false}
                    to="/forgot-password"
                  >
                    <a
                      href="/forgot-password"
                      onClick={[Function]}
                    >
                      Forgot Password?
                    </a>
                  </Link>
                </p>
                <p
                  className="form-extra-info text-center"
                >
                  Don't have an account?
                   
                  <Link
                    replace={false}
                    to="/signup?role=customer"
                  >
                    <a
                      href="/signup?role=customer"
                      onClick={[Function]}
                    >
                      Signup Here
                    </a>
                  </Link>
                </p>
                <p
                  className="text-center"
                >
                  Or
                </p>
                <p
                  className="form-extra-info text-center"
                >
                  <Link
                    replace={false}
                    to="/signup?role=caterer"
                  >
                    <a
                      href="/signup?role=caterer"
                      onClick={[Function]}
                    >
                      Signup as a Caterer
                    </a>
                  </Link>
                </p>
              </div>
            </Form>
          </Connect(Form)>
        </div>
      </div>
      <Footer>
        <div
          className="footer"
        >
          <p>
            © 2018. Iveren Shaguy. All images were gotten from the internet and are not mine.
          </p>
        </div>
      </Footer>
    </Auth>
  </Connect(Auth)>
</Provider>
`;
