// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form Components: RenderInput should render RenderInput component correctly 1`] = `
<RenderInput
  handleBlur={[MockFunction]}
  handleChange={[MockFunction]}
  handleFocus={[MockFunction]}
  id="email"
  label="Email"
  meta={
    Object {
      "asyncValidating": false,
      "error": null,
      "touched": false,
    }
  }
  name="email"
  placeholder="jane"
  required={true}
  type="email"
  value=""
>
  <div
    className="form-input"
  >
    <label
      htmlFor="email"
      onClick={[Function]}
    >
      Email
      <span
        className="danger"
      >
        *
      </span>
    </label>
    <input
      className=""
      id="email"
      name="email"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="jane"
      type="email"
      value=""
    />
     
  </div>
</RenderInput>
`;

exports[`Form Components: RenderInput should render checkbox correctly 1`] = `
<RenderInput
  handleBlur={[MockFunction]}
  handleChange={[MockFunction]}
  handleFocus={[MockFunction]}
  id="email"
  label="Email"
  meta={
    Object {
      "asyncValidating": false,
      "error": null,
      "touched": false,
    }
  }
  name="email"
  placeholder="jane"
  required={true}
  type="checkbox"
  value=""
>
  <div
    className="form-input-checkbox"
  >
    <input
      checked=""
      className=""
      id="email"
      name="email"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="jane"
      type="checkbox"
      value=""
    />
     
    <label
      htmlFor="email"
    >
      Email
    </label>
  </div>
</RenderInput>
`;

exports[`Form Components: RenderInput should show error when invalid data is inputted 1`] = `
<RenderInput
  handleBlur={[MockFunction]}
  handleChange={[MockFunction]}
  handleFocus={[MockFunction]}
  id="email"
  label="Email"
  meta={
    Object {
      "asyncValidating": false,
      "error": "This is an error",
      "touched": true,
    }
  }
  name="email"
  placeholder="jane"
  required={true}
  type="email"
  value="jane@smith.me"
>
  <div
    className="form-input"
  >
    <label
      htmlFor="email"
      onClick={[Function]}
    >
      Email
      <span
        className="danger"
      >
        *
      </span>
    </label>
    <input
      className="is-invalid"
      id="email"
      name="email"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="jane"
      type="email"
      value="jane@smith.me"
    />
     
    <div
      className="invalid-feedback"
    >
      This is an error
    </div>
  </div>
</RenderInput>
`;
